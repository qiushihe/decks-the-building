{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "ApiGatewayDeploymentStageNameParameter": {
      "Description": "Name of the API Gateway Deployment Stage. This would appear as the path on the URL of the deployment.",
      "Type": "String",
      "Default": "decks-the-building"
    }
  },
  "Resources": {
    "LambdaFnRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": ["sts:AssumeRole"],
              "Effect": "Allow",
              "Principal": {
                "Service": ["lambda.amazonaws.com"]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents"],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": [
                      "arn:aws:logs:${Region}:${AccountId}:log-group:/aws/lambda/${FunctionName}:*", {
                        "Region": { "Ref": "AWS::Region" },
                        "AccountId": { "Ref": "AWS::AccountId" },
                        "FunctionName": {
                          "Fn::Sub": [
                            "${Stack}-lambda-function", {
                              "Stack": { "Ref": "AWS::StackName" }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": {
              "Fn::Sub": [
                "${Stack}-lambda-policy", {
                  "Stack": { "Ref": "AWS::StackName" }
                }
              ]
            }
          }
        ]
      }
    },
    "LambdaFn": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler=function(a,b){b.succeed({statusCode:200,headers:{\"Content-Type\":\"text/html\"},body:\"<h1>It CloudFormation!</h1><pre>\"+JSON.stringify(a,null,2)+\"</pre>\"})};"
        },
        "FunctionName": {
          "Fn::Sub": [
            "${Stack}-lambda-function", {
              "Stack": { "Ref": "AWS::StackName" }
            }
          ]
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": ["LambdaFnRole", "Arn"]
        },
        "Runtime": "nodejs12.x"
      }
    },
    "LambdaFnLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": {
          "Fn::Sub": [
            "/aws/lambda/${FunctionName}", {
              "FunctionName": {
                "Fn::Sub": [
                  "${Stack}-lambda-function", {
                    "Stack": { "Ref": "AWS::StackName" }
                  }
                ]
              }
            }
          ]
        },
        "RetentionInDays": 90
      }
    },
    "ApiGateway": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "EndpointConfiguration": {
          "Types": ["REGIONAL"]
        },
        "Name": {
          "Fn::Sub": [
            "${Stack}-gateway", {
              "Stack": { "Ref": "AWS::StackName" }
            }
          ]
        }
      }
    },
    "ApiGatewayMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Sub": [
              "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/${FunctionArn}/invocations", {
                "Region": { "Ref": "AWS::Region" },
                "FunctionArn": { "Fn::GetAtt": ["LambdaFn", "Arn"] }
              }
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "text/html": "Empty"
            },
            "StatusCode": "200"
          }
        ],
        "ResourceId": { "Fn::GetAtt": ["ApiGateway", "RootResourceId"] },
        "RestApiId": { "Ref": "ApiGateway" }
      }
    },
    "ApiGatewayDeployment": {
      "DependsOn": "ApiGatewayMethod",
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": { "Ref": "ApiGateway" },
        "StageName": { "Ref": "ApiGatewayDeploymentStageNameParameter" }
      }
    },
    "ApiGatewayLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": { "Fn::GetAtt": ["LambdaFn", "Arn"] },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${Region}:${AccountId}:${Gateway}/*/${Method}/*", {
              "Region": { "Ref": "AWS::Region" },
              "AccountId": { "Ref": "AWS::AccountId" },
              "Gateway": { "Ref": "ApiGateway" },
              "Method": "GET"
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "AWSRegion": {
      "Description": "AWS region",
      "Value": {
        "Fn::Sub": [
          "${Value}", {
            "Value": { "Ref" : "AWS::Region" }
          }
        ]
      }
    },
    "ApiGatewayDeploymentUrl": {
      "Description": "API Gateway Deployment URL",
      "Value": {
        "Fn::Sub": [
          "https://${Gateway}.execute-api.${Region}.amazonaws.com/${StageName}", {
            "Gateway": { "Ref": "ApiGateway" },
            "Region": { "Ref": "AWS::Region" },
            "StageName": { "Ref": "ApiGatewayDeploymentStageNameParameter" }
          }
        ]
      }
    }
  }
}
